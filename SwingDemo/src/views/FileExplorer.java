/*
 * Licencia GPL.
 * Desarrollado por: William Sánchez
 * El software se proporciona "TAL CUAL", sin garantía de ningún tipo,
 * expresa o implícita, incluyendo pero no limitado a las garantías de
 * comerciabilidad y adecuación para un particular son rechazadas.
 * En ningún caso el autor será responsable por cualquier reclamo,
 * daño u otra responsabilidad, ya sea en una acción de contrato,
 * agravio o cualquier otro motivo, de o en relación con el software
 * o el uso u otros tratos en el software.
 * 
 */
package views;

import java.io.File;
import javax.swing.filechooser.FileSystemView;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreePath;
import models.FileTableModel;

/**
 *
 * @author William Sanchez
 */
public class FileExplorer extends javax.swing.JInternalFrame {
    DefaultMutableTreeNode root;
    DefaultTreeModel treeModel;
    /**
     * Creates new form FileExplorer
     */
    public FileExplorer() {
        initComponents();
        initTree();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        treeScrollPane = new javax.swing.JScrollPane();
        fileExplorerTree = new javax.swing.JTree();
        tableScrollPane = new javax.swing.JScrollPane();
        fileListTable = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        jSplitPane1.setDividerLocation(250);

        treeScrollPane.setPreferredSize(new java.awt.Dimension(250, 363));

        fileExplorerTree.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fileExplorerTreeMouseClicked(evt);
            }
        });
        treeScrollPane.setViewportView(fileExplorerTree);

        jSplitPane1.setLeftComponent(treeScrollPane);

        tableScrollPane.setViewportView(fileListTable);

        jSplitPane1.setRightComponent(tableScrollPane);

        getContentPane().add(jSplitPane1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fileExplorerTreeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fileExplorerTreeMouseClicked
        TreePath tp = fileExplorerTree.getPathForLocation(evt.getX(), evt.getY());
        if(tp!=null){
            File f = new File(tp.getLastPathComponent().toString());
            if (f.isDirectory()){
                fillFileListTable(f);
            }
        }
    }//GEN-LAST:event_fileExplorerTreeMouseClicked

public void initTree(){
     root = new DefaultMutableTreeNode("Este equipo");
     File [] paths;
     FileSystemView fsv = FileSystemView.getFileSystemView();
     
     paths = File.listRoots();
     
     for(File path:paths){
         DefaultMutableTreeNode d = new DefaultMutableTreeNode(path);
         addChilds(d,path.getPath());
         root.add(d);
     }
     
     fileExplorerTree.removeAll();
     treeModel = new DefaultTreeModel(root);
     fileExplorerTree.setModel(treeModel);
     treeModel.reload(root);
}
public void addChilds(DefaultMutableTreeNode rootNode, String path){
    try{
        File[] files =  getListFiles(path);
        for (File file:files){
            if(file.isDirectory()){
                DefaultMutableTreeNode subDirectory = new DefaultMutableTreeNode(file, true);
                rootNode.add(subDirectory);
            }
        }
    }
    catch(Exception ex){
        
    }
}
protected File[] getListFiles(String path){
    File file = new File(path);
    return file.listFiles();
}

protected void fillFileListTable(File f){
    try{
        FileTableModel model = new FileTableModel(f);
        fileListTable.setModel(model.getModel());
    }
    catch(Exception ex){
        
    }
}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTree fileExplorerTree;
    private javax.swing.JTable fileListTable;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JScrollPane tableScrollPane;
    private javax.swing.JScrollPane treeScrollPane;
    // End of variables declaration//GEN-END:variables
}
